# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: pytests_docker_build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade poetry
        poetry install
        poetry export --without-hashes --with dev --format=requirements.txt > requirements.txt 
        pip install -r requirements.txt
        pwd
        ls -lah
        pip show pytest
    - name: Lint code
      run: |
        echo "this is taken care as a pytest"
    - name: Test with pytest
      run: |
        pytest
    - name: Docker build & Security check
      run: |
        DOCKER_VERSION=`cat pyproject.toml |grep version |grep -v python|grep -v target | awk '{print $3}' |sed -e "s/\"//g"`
        echo "Using DOCKER_IMAGE_VERSION as $DOCKER_VERSION"
        bash buildDocker.sh $DOCKER_VERSION
        bash docker_sec_check.sh
    - name: Push Docker image to a container registry
      run: |
        echo ${{ secrets.DHUB_KEY }} | docker login -u ${{ secrets.DHUB_USER }} --password-stdin
        docker tag $IMAGE_NAME:$VERSION $IMAGE_NAME:latest
        docker push $IMAGE_NAME:$VERSION
      env:
        DHUB_USER: ${{ secrets.DHUB_USER }}
        DHUB_KEY: ${{ secrets.DHUB }}
